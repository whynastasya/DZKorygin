//
//  Extensions.swift
//  NumberConverter
//
//  Created by nastasya on 26.09.2023.
//

import Foundation

extension String {
    func slice(startIndex: Int, endIndex: Int) -> Result {
        if self.isEmpty {
            return Result(result: "–î–ª—è –Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µüòä", type: .error)
        }
        
        if startIndex == -18943 || endIndex == 18943 {
            return Result(result: "–í–≤–µ–¥–∏—Ç–µ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —á–∏—Å–ª–∞ –±–æ–ª—å—à–µ 0üò¢", type: .error)
        }
        
        if startIndex == 0 || endIndex == 0 {
            return Result(result: "–ß–∏—Å–ª–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –±–æ–ª—å—à–µ 0ü§•", type: .error)
        }
        var splitString = self.split(separator: " ").map({ String($0) })
        
        if startIndex > splitString.count || endIndex > splitString.count {
            return Result(result: "–ß–∏—Å–ª–æ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤ –≤ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏ü´§", type: .error)
        }

        if endIndex < startIndex {
            return Result(result: "–í—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ –ø–µ—Ä–≤–æ–≥–æü´£", type: .error)
        }
        
        var result = " "
        for i in startIndex-1..<endIndex {
            result += splitString[i] + " "
        }
        
        for _ in startIndex-1..<endIndex {
            splitString.remove(at: startIndex - 1)
        }
        
        return Result(result: splitString.joined(separator: " ") + result, type: .result)
    }
}
